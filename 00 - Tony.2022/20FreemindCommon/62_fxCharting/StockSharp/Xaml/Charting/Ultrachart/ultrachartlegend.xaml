<ItemsControl
    x:Class="fx.Charting.ultrachartlegend"
    x:Name="Ctrl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dxco="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:local="clr-namespace:fx.Charting"
    xmlns:s="http://schemas.abtsoftware.co.uk/scichart"
    xmlns:sxcu="clr-namespace:fx.Charting.Ultrachart"
    xmlns:sxXaml="clr-namespace:StockSharp.Xaml;assembly=StockSharp.Xaml"
    xmlns:sysMark="clr-namespace:System.Windows.Markup;assembly=System.Xaml"
    Control.BorderBrush="Transparent"
    Control.BorderThickness="1"
    Control.FontSize="12"
    Control.FontWeight="Bold"
    Control.Padding="5"
    FrameworkElement.HorizontalAlignment="Left"
    FrameworkElement.VerticalAlignment="Top"
    ItemsControl.ItemsSource="{Binding Elements}"
    SizeChanged="OnSizeChanged">
    <FrameworkElement.Resources>
        <s:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <s:ColorToBrushConverter x:Key="ColorToBrushConverter" />
        <local:ChartIndicatorConverter x:Key="UltrachartElementToSettingsObjectConverter" />
        <sxcu:AreaAxesToBorderColorConverter x:Key="axesToBorderConv" />
        <sxcu:AreaAxesToTooltipConverter x:Key="axesToTooltipConv" />
    </FrameworkElement.Resources>
    <ItemsControl.ItemTemplate>
        <DataTemplate DataType="local:UltrachartCompositeElement">
            <Border>
                <Border.Background>
                    <MultiBinding Converter="{StaticResource axesToBorderConv}">
                        <Binding Path="ChartElement.XAxis" />
                        <Binding Path="ChartElement.YAxis" />
                    </MultiBinding>
                </Border.Background>
                <FrameworkElement.ToolTip>
                    <MultiBinding Converter="{StaticResource axesToTooltipConv}">
                        <Binding Path="ChartElement.XAxis" />
                        <Binding Path="ChartElement.YAxis" />
                    </MultiBinding>
                </FrameworkElement.ToolTip>
                <Grid HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <CheckBox
                        Grid.Column="0"
                        Width="16"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        IsChecked="{Binding ChartElement.IsVisible, Mode=TwoWay}"
                        Visibility="{Binding ElementName=Ctrl, Path=DataContext.AllowToHide, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <local:ChartElementEditor
                        Grid.Column="1"
                        Width="16"
                        Height="16">
                        <FrameworkElement.DataContext>
                            <MultiBinding Converter="{StaticResource UltrachartElementToSettingsObjectConverter}">
                                <Binding Path="ChartElement" />
                                <Binding FallbackValue="{x:Null}" Path="ChartElement.IndicatorPainter" />
                            </MultiBinding>
                        </FrameworkElement.DataContext>
                    </local:ChartElementEditor>
                    <dxco:SimpleButton
                        Grid.Column="2"
                        Width="10"
                        Height="10"
                        Margin="2,0,0,0"
                        Command="{Binding ElementName=Ctrl, Path=DataContext.RemoveElementCommand}"
                        CommandParameter="{Binding}"
                        Visibility="{Binding ElementName=Ctrl, Path=DataContext.AllowToRemove, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <FrameworkElement.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="Transparent">
                                                <ContentPresenter
                                                    x:Name="PART_Content"
                                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                    TextElement.Foreground="{TemplateBinding Control.Foreground}" />
                                                <FrameworkElement.Style>
                                                    <Style>
                                                        <Setter Property="Border.Background" Value="{x:Null}" />
                                                        <Setter Property="Border.BorderThickness" Value="0" />
                                                        <Style.Triggers>
                                                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                                                <Setter Property="Border.Background" Value="Black" />
                                                                <Setter Property="Border.BorderThickness" Value="1" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </FrameworkElement.Style>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </FrameworkElement.Style>
                        <Image Source="{sxXaml:ThemedIcons Key=Remove2}" />
                    </dxco:SimpleButton>
                    <Grid
                        Width="10"
                        Height="10"
                        Margin="5,0,5,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Background="{Binding Color, Converter={StaticResource ColorToBrushConverter}}"
                        Column="3" />
                    <StackPanel Grid.Column="4" Orientation="Horizontal">
                        <TextBlock
                            Margin="5,0,0,0"
                            VerticalAlignment="Center"
                            Text="{Binding ChartElement.FullTitle}" />
                        <ItemsControl ItemsSource="{Binding Values}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="local:UltrachartElementValue">
                                    <Grid
                                        MinWidth="{Binding DataContext.MinFieldWidth, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                        Margin="5,0,0,0"
                                        VerticalAlignment="Center">
                                        <FrameworkElement.Style>
                                            <Style TargetType="{x:Type Grid}">
                                                <Style.Triggers>
                                                    <DataTrigger Value="" Binding="{Binding Value}">
                                                        <Setter Property="UIElement.Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                    <DataTrigger Value="{x:Null}" Binding="{Binding Value}">
                                                        <Setter Property="UIElement.Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </FrameworkElement.Style>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0">
                                            <FrameworkElement.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger Value="" Binding="{Binding Name}">
                                                            <Setter Property="UIElement.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                        <DataTrigger Value="{x:Null}" Binding="{Binding Name}">
                                                            <Setter Property="UIElement.Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </FrameworkElement.Style>
                                            <Run Text="{Binding Name}" />
                                            <Run Text=": " />
                                        </TextBlock>
                                        <TextBlock
                                            Grid.Column="1"
                                            Foreground="{Binding Color, Converter={StaticResource ColorToBrushConverter}}"
                                            Text="{Binding Value}" />
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </Grid>
            </Border>
        </DataTemplate>
    </ItemsControl.ItemTemplate>
    <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
            <StackPanel IsItemsHost="true" Orientation="Vertical" />
        </ItemsPanelTemplate>
    </ItemsControl.ItemsPanel>
    <Control.Template>
        <ControlTemplate TargetType="{x:Type ItemsControl}">
            <Border
                HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}"
                VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}"
                Background="{TemplateBinding Control.Background}"
                BorderBrush="{TemplateBinding Control.BorderBrush}"
                BorderThickness="{TemplateBinding Control.BorderThickness}"
                Padding="{TemplateBinding Control.Padding}">
                <ScrollViewer
                    Focusable="false"
                    HorizontalScrollBarVisibility="Hidden"
                    s:CompatibleFocus.IsFocusable="false"
                    VerticalScrollBarVisibility="Hidden">
                    <ItemsPresenter />
                </ScrollViewer>
            </Border>
        </ControlTemplate>
    </Control.Template>
</ItemsControl>