<UserControl
    x:Class="fx.Charting.ChartExView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"    
    xmlns:VM="clr-namespace:fx.Charting"
    xmlns:View="clr-namespace:fx.Charting"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:loc="clr-namespace:StockSharp.Localization;assembly=StockSharp.Localization"
    
    
    xmlns:local="clr-namespace:fx.Charting"
    xmlns:s="http://schemas.abtsoftware.co.uk/scichart"
    xmlns:s3D="http://schemas.abtsoftware.co.uk/scichart3D"
    xmlns:sysXaml="clr-namespace:System.Windows.Markup;assembly=System.Xaml" xmlns:cnvt="clr-namespace:Ecng.Xaml.Converters;assembly=StockSharp.Xaml"
    s:ThemeManager.Theme="{Binding SelectedTheme}">

    <UserControl.DataContext>
        <local:ChartExViewModel />
    </UserControl.DataContext>
    <dxmvvm:Interaction.Behaviors>
        <dxmvvm:DispatcherService />
        <local:CustomShowWindowService />
        <dx:DXMessageBoxService />
    </dxmvvm:Interaction.Behaviors>
    <!--<dxmvvm:Interaction.Triggers>
        <dxmvvm:EventToCommand  EventName="Initialized" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.InitializedCommand}" PassEventArgsToCommand="True">
        </dxmvvm:EventToCommand>
    </dxmvvm:Interaction.Triggers>-->
    <FrameworkElement.Resources>
        <s:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Style x:Key="PropertyStyles" TargetType="s:SciChartGroup">
            <Setter Property="s:SciChartGroup.IsTabbed" Value="True" />
        </Style>
        <Style x:Key="Grpstyle" TargetType="{x:Type s:SciChartGroupPane}">
            
            <Setter Property="s:SciChartGroupPane.HeaderTemplate">
                <Setter.Value>
                    <DataTemplate DataType="s:ItemPane">
                        <Grid VerticalAlignment="Center" Background="{x:Null}">
                            <TextBlock
                                Margin="5,2,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Text="{Binding PaneViewModel.Title}" />
                            <StackPanel
                                Margin="2,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                Orientation="Vertical">
                                <Button
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Background="Transparent"
                                    Command="{Binding ChangeOrientationCommand}">
                                    <Canvas Width="10" Height="10">
                                        <Path
                                            Canvas.Left="1"
                                            Width="7"
                                            Height="10"
                                            Data="F1 M 2,7 L 3,7 3,1 8,1 8,7 6,7 6,2 4,2 4,7 9,7 9,8 6,8 6,11 5,11 5,8 2,8 "
                                            Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}"
                                            Stretch="Fill"
                                            Visibility="{Binding ConverterParameter=inverse, Path=IsTabbed, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                        <Path
                                            Canvas.Top="2"
                                            Width="10"
                                            Height="7"
                                            Data="F1 M 5,3 L 5,4 11,4 11,9 5,9 5,7 10,7 10,5 5,5 5,7 5,10 4,10 4,7 1,7 1,6 4,6 4,3 "
                                            Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}"
                                            Stretch="Fill"
                                            Visibility="{Binding Path=IsTabbed, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    </Canvas>
                                </Button>
                                <Button
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Background="Transparent"
                                    Command="{Binding PaneViewModel.ClosePaneCommand}"
                                    CommandParameter="{Binding PaneViewModel}">
                                    <Canvas Width="10" Height="10">
                                        <Path
                                            Canvas.Left="1"
                                            Canvas.Top="1"
                                            Width="8"
                                            Height="8"
                                            Data="M 0,0 L 1,0 4,3 7,0 8,0 8,1 5,4 8,7 8,8 7,8 4,5 1,8 0,8 0,7 3,4 0,1 Z"
                                            Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}"
                                            Stretch="Fill" />
                                    </Canvas>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type s:SciChartGroupPane}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Thumb
                                x:Name="PART_TopSplitter"
                                Height="1"
                                HorizontalAlignment="Stretch"
                                Background="#33999999"
                                BorderBrush="#99000000"
                                BorderThickness="0,1"
                                Cursor="SizeNS" />
                            <ContentPresenter
                                x:Name="PART_ContentHost"
                                Grid.Row="1"
                                Grid.RowSpan="2"
                                Content="{TemplateBinding ContentControl.Content}" />
                            <Grid x:Name="PART_Header" Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.Height" Value="{Binding PaneViewModel.Height, Mode=TwoWay}" />
        </Style>
        <cnvt:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <local:UltrachartOverviewVisibilityConverter x:Key="UltrachartOverviewVisibilityConverter" />
    </FrameworkElement.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <FrameworkElement.ContextMenu>
            <ContextMenu DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" Visibility="{Binding ChartExViewModel.IsInteracted, Converter={StaticResource BoolToVisibilityConverter}}">
                <MenuItem
                    Command="{Binding ChartExViewModel.AddAreaCommand}"
                    Header="{x:Static loc:LocalizedStrings.XamlStr143}"
                    ToolTip="{x:Static loc:LocalizedStrings.XamlStr143}" />
            </ContextMenu>
        </FrameworkElement.ContextMenu>
        <s:SciChartGroup IsTabbed="True"
            x:Name="ChartGroupEx"
            ItemContainerStyle="{StaticResource Grpstyle}"
            ItemsSource="{Binding ScichartSurfaceViewModels}">
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="local:ScichartSurfaceMVVM">
                    <Grid>
                        <FrameworkElement.ContextMenu>
                            <ContextMenu DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" Visibility="{Binding ChartExViewModel.IsInteracted, Converter={StaticResource BoolToVisibilityConverter}}">
                                <MenuItem Command="{Binding ChartExViewModel.AddAreaCommand}" ToolTip="{x:Static loc:LocalizedStrings.XamlStr143}">
                                    <HeaderedItemsControl.Header>
                                        <TextBlock Text="{x:Static loc:LocalizedStrings.XamlStr143}" />
                                    </HeaderedItemsControl.Header>
                                </MenuItem>
                                <MenuItem Header="{x:Static loc:LocalizedStrings.XamlStr142}">
                                    <MenuItem
                                        Command="{Binding ChartExViewModel.AddXAxisCommand}"
                                        CommandParameter="{Binding Area}"
                                        Header="X" />
                                    <MenuItem
                                        Command="{Binding ChartExViewModel.AddYAxisCommand}"
                                        CommandParameter="{Binding Area}"
                                        Header="Y" />
                                </MenuItem>
                                <MenuItem Command="{Binding ChartExViewModel.ShowHiddenAxesCommand}" ToolTip="{x:Static loc:LocalizedStrings.ShowHiddenAxes}">
                                    <HeaderedItemsControl.Header>
                                        <TextBlock Text="{x:Static loc:LocalizedStrings.ShowHiddenAxes}" />
                                    </HeaderedItemsControl.Header>
                                </MenuItem>
                                <Separator />
                                <MenuItem Command="{Binding ChartExViewModel.AddCandlesCommand}" CommandParameter="{Binding Area}">
                                    <HeaderedItemsControl.Header>
                                        <TextBlock>
                                            <Run Text="{x:Static loc:LocalizedStrings.Candles}" />
                                            ...</TextBlock>
                                    </HeaderedItemsControl.Header>
                                </MenuItem>
                                <MenuItem Command="{Binding ChartExViewModel.AddIndicatorCommand}" CommandParameter="{Binding Area}">
                                    <HeaderedItemsControl.Header>
                                        <TextBlock>
                                            <Run Text="{x:Static loc:LocalizedStrings.Str1981}" />
                                            ...</TextBlock>
                                    </HeaderedItemsControl.Header>
                                </MenuItem>
                                <MenuItem Command="{Binding ChartExViewModel.AddIndicatorFifoCommand}" CommandParameter="{Binding Area}">
                                    <HeaderedItemsControl.Header>
                                        <TextBlock>
                                            <Run Text="{x:Static loc:LocalizedStrings.IndicatorFifo}" />
                                            ...</TextBlock>
                                    </HeaderedItemsControl.Header>
                                </MenuItem>
                                <Separator />
                                <MenuItem Command="{Binding ChartExViewModel.AddOrdersCommand}" CommandParameter="{Binding Area}">
                                    <HeaderedItemsControl.Header>
                                        <TextBlock>
                                            <Run Text="{x:Static loc:LocalizedStrings.Orders}" />
                                            ...</TextBlock>
                                    </HeaderedItemsControl.Header>
                                </MenuItem>
                                <MenuItem Command="{Binding ChartExViewModel.AddTradesCommand}" CommandParameter="{Binding Area}">
                                    <HeaderedItemsControl.Header>
                                        <TextBlock>
                                            <Run Text="{x:Static loc:LocalizedStrings.MyTrades}" />
                                            ...</TextBlock>
                                    </HeaderedItemsControl.Header>
                                </MenuItem>
                            </ContextMenu>
                        </FrameworkElement.ContextMenu>

                        <s:SciChartSurface
                            x:Name="TonySciChart"
                            s:SciChartGroup.VerticalChartGroup="{Binding PaneGroup}"
                            s:SciChartSurface.Annotations="{Binding Annotations}"
                            s:SciChartSurface.RenderableSeries="{Binding AdvanceChartRenderableSeries}"
                            s:SciChartSurface.XAxes="{Binding XAxises}"
                            s:SciChartSurface.YAxes="{Binding YAxises}"
                            s:VisualXcceleratorEngine.DowngradeWithoutException="False"
                            s:VisualXcceleratorEngine.EnableImpossibleMode="True"
                            s:VisualXcceleratorEngine.FallbackType="{x:Type s:HighQualityRenderSurface}"
                            s:VisualXcceleratorEngine.IsEnabled="True"
                            Background="White"
                            ChartModifier="{Binding ChartModifier}"
                            ClipModifierSurface="true"
                            Initialized="OnInitialized"
                            ViewportManager="{Binding ViewportManager}" />
                        <local:ultrachartlegend
                            FrameworkElement.DataContext="{Binding LegendViewModel}"
                            FrameworkElement.Margin="23,23"
                            UIElement.Visibility="{Binding Pane.ShowLegend, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" />
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </s:SciChartGroup>
        <s:SciChartOverview
            Grid.Row="1"
            Height="40"
            VerticalAlignment="Stretch"
            local:ScichartOverviewSurface.ItemsControlParentSurface="{Binding Path=., ElementName=ChartGroupEx}"
            ParentSurface="{Binding ElementName=TonySciChart}"
            XAxisId="X">
            <UIElement.Visibility>
                <MultiBinding Converter="{StaticResource UltrachartOverviewVisibilityConverter}">
                    <Binding Path="ShowOverview" />
                    <Binding Path="ParentSurface" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </UIElement.Visibility>
        </s:SciChartOverview>
    </Grid>

</UserControl>