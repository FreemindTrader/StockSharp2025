<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StockSharp.Charting.Interfaces</name>
    </assembly>
    <members>
        <member name="T:StockSharp.Charting.AnnotationCoordinateMode">
            <summary>
            Enumeration constants to define the Coordinate mode used to place an annotation.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.AnnotationCoordinateMode.Absolute">
            <summary>
            Absolute, requires that coordinates X1,Y1,X2,Y2 are data-values.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.AnnotationCoordinateMode.Relative">
            <summary>
            Relative, requires that coordinates X1,Y1,X2,Y2 are double values between 0.0 and 1.0.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.AnnotationCoordinateMode.RelativeX">
            <summary>
            RelativeX, requires that coordinates X1,X2 are double values between 0.0 and 1.0, whereas Y1,Y2 are data-values.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.AnnotationCoordinateMode.RelativeY">
            <summary>
            RelativeY, requires that coordinates Y1,Y2 are double values between 0.0 and 1.0, whereas X1,X2 are data-values.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.ChartAnnotationTypes">
            <summary>
            The annotations types.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartAnnotationTypes.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartAnnotationTypes.LineAnnotation">
            <summary>
            Line.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartAnnotationTypes.LineArrowAnnotation">
            <summary>
            Pointer.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartAnnotationTypes.TextAnnotation">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartAnnotationTypes.BoxAnnotation">
            <summary>
            Area.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartAnnotationTypes.HorizontalLineAnnotation">
            <summary>
            Horizontal line.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartAnnotationTypes.VerticalLineAnnotation">
            <summary>
            Vertical line.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartAnnotationTypes.RulerAnnotation">
            <summary>
            Ruler.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.ChartAxisType">
            <summary>
            Chart axes types.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartAxisType.DateTime">
            <summary>
            Time.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartAxisType.CategoryDateTime">
            <summary>
            Time without breaks.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartAxisType.Numeric">
            <summary>
            Number.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.ChartCandleDrawStyles">
            <summary>
            Styles of the candles chart drawing.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartCandleDrawStyles.CandleStick">
            <summary>
            Japanese candles.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartCandleDrawStyles.Ohlc">
            <summary>
            Bars.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartCandleDrawStyles.LineOpen">
            <summary>
            Line (open).
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartCandleDrawStyles.LineHigh">
            <summary>
            Line (high).
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartCandleDrawStyles.LineLow">
            <summary>
            Line (low).
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartCandleDrawStyles.LineClose">
            <summary>
            Line (close).
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartCandleDrawStyles.BoxVolume">
            <summary>
            Box volumes.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartCandleDrawStyles.ClusterProfile">
            <summary>
            Cluster profile.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartCandleDrawStyles.Area">
            <summary>
            Area.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartCandleDrawStyles.PnF">
            <summary>
            X0 candle.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.ChartIndicatorDrawStyles">
            <summary>
            Indicator chart drawing styles.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartIndicatorDrawStyles.Line">
            <summary>
            Line.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartIndicatorDrawStyles.NoGapLine">
            <summary>
            Line (no gaps).
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartIndicatorDrawStyles.StepLine">
            <summary>
            Stepped line.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartIndicatorDrawStyles.Band">
            <summary>
            Band.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartIndicatorDrawStyles.BandOneValue">
            <summary>
            The range with a single value.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartIndicatorDrawStyles.Dot">
            <summary>
            Dot.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartIndicatorDrawStyles.Histogram">
            <summary>
            Histogram.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartIndicatorDrawStyles.Bubble">
            <summary>
            Bubble.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartIndicatorDrawStyles.StackedBar">
            <summary>
            Stacked bar chart.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartIndicatorDrawStyles.DashedLine">
            <summary>
            Dashed line.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartIndicatorDrawStyles.Area">
            <summary>
            Area.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.ChartingInterfacesExtensions">
            <summary>
            Extension class for <see cref="T:StockSharp.Charting.IChart"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Charting.ChartingInterfacesExtensions.Draw(StockSharp.Charting.IChart,StockSharp.Charting.IChartCandleElement,StockSharp.Algo.Candles.Candle)">
            <summary>
            To draw the candle.
            </summary>
            <param name="chart">Chart.</param>
            <param name="element">The chart element representing a candle.</param>
            <param name="candle">Candle.</param>
        </member>
        <member name="M:StockSharp.Charting.ChartingInterfacesExtensions.Draw(StockSharp.Charting.IChart,System.DateTimeOffset,StockSharp.Charting.IChartElement,System.Object)">
            <summary>
            To draw new data.
            </summary>
            <param name="chart">Chart.</param>
            <param name="time">The time stamp of the new data generation.</param>
            <param name="element">The chart element.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:StockSharp.Charting.ChartingInterfacesExtensions.Draw(StockSharp.Charting.IChart,System.DateTimeOffset,System.Collections.Generic.IDictionary{StockSharp.Charting.IChartElement,System.Object})">
            <summary>
            To process the new data.
            </summary>
            <param name="chart">Chart.</param>
            <param name="time">The time stamp of the new data generation.</param>
            <param name="values">New data.</param>
        </member>
        <member name="M:StockSharp.Charting.ChartingInterfacesExtensions.Draw(StockSharp.Charting.IChart,System.Collections.Generic.IEnumerable{Ecng.Common.RefPair{System.DateTimeOffset,System.Collections.Generic.IDictionary{StockSharp.Charting.IChartElement,System.Object}}})">
            <summary>
            To process the new data.
            </summary>
            <param name="chart">Chart.</param>
            <param name="values">New data.</param>
        </member>
        <member name="M:StockSharp.Charting.ChartingInterfacesExtensions.GetArea(StockSharp.Charting.IChart,System.Int32)">
            <summary>
            To return the area by the specified index. If the number of areas is smaller then the missing areas will be created automatically.
            </summary>
            <param name="chart">Chart.</param>
            <param name="index">The area index.</param>
            <returns>Area.</returns>
        </member>
        <member name="M:StockSharp.Charting.ChartingInterfacesExtensions.GetChart(StockSharp.Algo.Strategies.Strategy)">
            <summary>
            To get the chart associated with the passed strategy.
            </summary>
            <param name="strategy">Strategy.</param>
            <returns>Chart.</returns>
        </member>
        <member name="M:StockSharp.Charting.ChartingInterfacesExtensions.SetChart(StockSharp.Algo.Strategies.Strategy,StockSharp.Charting.IChart)">
            <summary>
            To set a chart for the strategy.
            </summary>
            <param name="strategy">Strategy.</param>
            <param name="chart">Chart.</param>
        </member>
        <member name="M:StockSharp.Charting.ChartingInterfacesExtensions.IsVolumeProfileChart(StockSharp.Charting.ChartCandleDrawStyles)">
            <summary>
            Check the specified style is volume profile based.
            </summary>
            <param name="style">Style.</param>
            <returns>Check result.</returns>
        </member>
        <member name="T:StockSharp.Charting.ChartOrderDisplayFilter">
            <summary>
            Orders display filter.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.ChartOrderDisplayFilter.All">
            <summary>All orders.</summary>
        </member>
        <member name="F:StockSharp.Charting.ChartOrderDisplayFilter.ErrorsOnly">
            <summary>Orders with errors.</summary>
        </member>
        <member name="F:StockSharp.Charting.ChartOrderDisplayFilter.NoErrorsOnly">
            <summary>Orders with no errors.</summary>
        </member>
        <member name="T:StockSharp.Charting.IAnnotationData">
            <summary>
            Used to transfer annotation draw data.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IAnnotationData.IsVisible">
            <summary>Show/hide annotation.</summary>
        </member>
        <member name="P:StockSharp.Charting.IAnnotationData.IsEditable">
            <summary>Whether user can edit annotation.</summary>
        </member>
        <member name="P:StockSharp.Charting.IAnnotationData.X1">
            <summary>
            X1 coordinate for annotation drawing.
            <see cref="T:System.DateTimeOffset"/> for coordinate mode <see cref="F:StockSharp.Charting.AnnotationCoordinateMode.Absolute"/> or <see cref="F:StockSharp.Charting.AnnotationCoordinateMode.RelativeY"/>.
            <see cref="T:System.Double"/> otherwise.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IAnnotationData.Y1">
            <summary>
            Y1 coordinate for annotation drawing.
            <see cref="T:System.Decimal"/> for coordinate mode <see cref="F:StockSharp.Charting.AnnotationCoordinateMode.Absolute"/> or <see cref="F:StockSharp.Charting.AnnotationCoordinateMode.RelativeX"/>.
            <see cref="T:System.Double"/> otherwise.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IAnnotationData.X2">
            <summary>
            X2 coordinate for annotation drawing.
            <see cref="T:System.DateTimeOffset"/> for coordinate mode <see cref="F:StockSharp.Charting.AnnotationCoordinateMode.Absolute"/> or <see cref="F:StockSharp.Charting.AnnotationCoordinateMode.RelativeY"/>.
            <see cref="T:System.Double"/> otherwise.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IAnnotationData.Y2">
            <summary>
            Y2 coordinate for annotation drawing.
            <see cref="T:System.Decimal"/> for coordinate mode <see cref="F:StockSharp.Charting.AnnotationCoordinateMode.Absolute"/> or <see cref="F:StockSharp.Charting.AnnotationCoordinateMode.RelativeX"/>.
            <see cref="T:System.Double"/> otherwise.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IAnnotationData.Stroke">
            <summary>Brush to draw lines and borders.</summary>
        </member>
        <member name="P:StockSharp.Charting.IAnnotationData.Fill">
            <summary>Brush to fill background.</summary>
        </member>
        <member name="P:StockSharp.Charting.IAnnotationData.Foreground">
            <summary>Brush to fill background.</summary>
        </member>
        <member name="P:StockSharp.Charting.IAnnotationData.Thickness">
            <summary>Line thickness.</summary>
        </member>
        <member name="P:StockSharp.Charting.IAnnotationData.ShowLabel">
            <summary>Turn on/off label show for horizontal and vertical lines.</summary>
        </member>
        <member name="P:StockSharp.Charting.IAnnotationData.LabelPlacement">
            <summary>Label placement for horizontal and vertical lines.</summary>
        </member>
        <member name="P:StockSharp.Charting.IAnnotationData.HorizontalAlignment">
            <summary>Alignment for horizontal lines.</summary>
        </member>
        <member name="P:StockSharp.Charting.IAnnotationData.VerticalAlignment">
            <summary>Alignment for vertical lines.</summary>
        </member>
        <member name="P:StockSharp.Charting.IAnnotationData.CoordinateMode">
            <summary>
            Coordinate mode.
            <see cref="F:StockSharp.Charting.AnnotationCoordinateMode.Absolute"/> means <see cref="T:System.DateTimeOffset"/> for X and <see cref="T:System.Decimal"/> price for Y.
            <see cref="F:StockSharp.Charting.AnnotationCoordinateMode.Relative"/> means relative to the screen edges: double. 0=top/left, 0.5=center, 1=bottom/right
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IAnnotationData.Text">
            <summary>Text for text annotation.</summary>
        </member>
        <member name="T:StockSharp.Charting.IChart">
            <summary>
            The interface for work with the chart.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChart.Areas">
            <summary>
            Chart areas.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChart.IsAutoScroll">
            <summary>
            To scroll <see cref="P:StockSharp.Charting.IChart.Areas"/> areas automatically when new data occurred. The default is enabled.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChart.IsAutoRange">
            <summary>
            To use automatic range for the X-axis. The default is off.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChart.XAxisType">
            <summary>
            Type of X axis for this chart.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChart.IndicatorTypes">
            <summary>
            The list of available indicators types.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChart.ShowNonFormedIndicators">
            <summary>
            Show non formed indicators values.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChart.ShowPerfStats">
            <summary>
            Show FPS.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChart.ThreadDispatcher">
            <summary>
            <see cref="T:Ecng.ComponentModel.IDispatcher"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Charting.IChart.CreateArea">
            <summary>
            Create <see cref="T:StockSharp.Charting.IChartArea"/> instance.
            </summary>
            <returns><see cref="T:StockSharp.Charting.IChartArea"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChart.CreateAxis">
            <summary>
            Create <see cref="T:StockSharp.Charting.IChartAxis"/> instance.
            </summary>
            <returns><see cref="T:StockSharp.Charting.IChartAxis"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChart.CreateCandleElement">
            <summary>
            Create <see cref="T:StockSharp.Charting.IChartCandleElement"/> instance.
            </summary>
            <returns><see cref="T:StockSharp.Charting.IChartCandleElement"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChart.CreateIndicatorElement">
            <summary>
            Create <see cref="T:StockSharp.Charting.IChartIndicatorElement"/> instance.
            </summary>
            <returns><see cref="T:StockSharp.Charting.IChartIndicatorElement"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChart.CreateActiveOrdersElement">
            <summary>
            Create <see cref="T:StockSharp.Charting.IChartActiveOrdersElement"/> instance.
            </summary>
            <returns><see cref="T:StockSharp.Charting.IChartActiveOrdersElement"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChart.CreateAnnotation">
            <summary>
            Create <see cref="T:StockSharp.Charting.IChartAnnotation"/> instance.
            </summary>
            <returns><see cref="T:StockSharp.Charting.IChartAnnotation"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChart.CreateBandElement">
            <summary>
            Create <see cref="T:StockSharp.Charting.IChartBandElement"/> instance.
            </summary>
            <returns><see cref="T:StockSharp.Charting.IChartBandElement"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChart.CreateLineElement">
            <summary>
            Create <see cref="T:StockSharp.Charting.IChartLineElement"/> instance.
            </summary>
            <returns><see cref="T:StockSharp.Charting.IChartLineElement"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChart.CreateBubbleElement">
            <summary>
            Create <see cref="T:StockSharp.Charting.IChartLineElement"/> instance.
            </summary>
            <returns><see cref="T:StockSharp.Charting.IChartLineElement"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChart.CreateOrderElement">
            <summary>
            Create <see cref="T:StockSharp.Charting.IChartOrderElement"/> instance.
            </summary>
            <returns><see cref="T:StockSharp.Charting.IChartOrderElement"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChart.CreateTradeElement">
            <summary>
            Create <see cref="T:StockSharp.Charting.IChartTradeElement"/> instance.
            </summary>
            <returns><see cref="T:StockSharp.Charting.IChartTradeElement"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChart.AddArea(StockSharp.Charting.IChartArea)">
            <summary>
            To add an area to the chart.
            </summary>
            <param name="area">Chart area.</param>
        </member>
        <member name="M:StockSharp.Charting.IChart.RemoveArea(StockSharp.Charting.IChartArea)">
            <summary>
            To remove the area from the chart.
            </summary>
            <param name="area">Chart area.</param>
        </member>
        <member name="M:StockSharp.Charting.IChart.ClearAreas">
            <summary>
            To remove all areas from the chart.
            </summary>
        </member>
        <member name="M:StockSharp.Charting.IChart.AddElement(StockSharp.Charting.IChartArea,StockSharp.Charting.IChartElement)">
            <summary>
            To add an element to the chart.
            </summary>
            <param name="area">Chart area.</param>
            <param name="element">The chart element.</param>
        </member>
        <member name="M:StockSharp.Charting.IChart.AddElement(StockSharp.Charting.IChartArea,StockSharp.Charting.IChartCandleElement,StockSharp.Algo.Candles.CandleSeries)">
            <summary>
            To add an element to the chart.
            </summary>
            <param name="area">Chart area.</param>
            <param name="element">The chart element.</param>
            <param name="candleSeries">Candles series.</param>
        </member>
        <member name="M:StockSharp.Charting.IChart.AddElement(StockSharp.Charting.IChartArea,StockSharp.Charting.IChartIndicatorElement,StockSharp.Algo.Candles.CandleSeries,StockSharp.Algo.Indicators.IIndicator)">
            <summary>
            To add an element to the chart.
            </summary>
            <param name="area">Chart area.</param>
            <param name="element">The chart element.</param>
            <param name="candleSeries">Candles series.</param>
            <param name="indicator">Indicator.</param>
        </member>
        <member name="M:StockSharp.Charting.IChart.AddElement(StockSharp.Charting.IChartArea,StockSharp.Charting.IChartOrderElement,StockSharp.BusinessEntities.Security)">
            <summary>
            To add an element to the chart.
            </summary>
            <param name="area">Chart area.</param>
            <param name="element">The chart element.</param>
            <param name="security">Security.</param>
        </member>
        <member name="M:StockSharp.Charting.IChart.AddElement(StockSharp.Charting.IChartArea,StockSharp.Charting.IChartTradeElement,StockSharp.BusinessEntities.Security)">
            <summary>
            To add an element to the chart.
            </summary>
            <param name="area">Chart area.</param>
            <param name="element">The chart element.</param>
            <param name="security">Security.</param>
        </member>
        <member name="M:StockSharp.Charting.IChart.RemoveElement(StockSharp.Charting.IChartArea,StockSharp.Charting.IChartElement)">
            <summary>
            To remove the element from the chart.
            </summary>
            <param name="area">Chart area.</param>
            <param name="element">The chart element.</param>
        </member>
        <member name="M:StockSharp.Charting.IChart.GetIndicator(StockSharp.Charting.IChartIndicatorElement)">
            <summary>
            To get an indicator which is associated with <see cref="T:StockSharp.Charting.IChartIndicatorElement"/>.
            </summary>
            <param name="element">The chart element.</param>
            <returns>Indicator.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChart.GetSource(StockSharp.Charting.IChartElement)">
            <summary>
            To get the data source for <see cref="T:StockSharp.Charting.IChartElement"/>.
            </summary>
            <param name="element">The chart element.</param>
            <returns>Market-data source.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChart.Reset(System.Collections.Generic.IEnumerable{StockSharp.Charting.IChartElement})">
            <summary>
            To reset the chart elements values drawn previously.
            </summary>
            <param name="elements">Chart elements.</param>
        </member>
        <member name="T:StockSharp.Charting.IChartActiveOrdersElement">
            <summary>
            The chart element representing active orders.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartActiveOrdersElement.BuyPendingColor">
            <summary>
            Color of Buy order in non-active state.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartActiveOrdersElement.BuyColor">
            <summary>
            Color of Buy order in active state.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartActiveOrdersElement.BuyBlinkColor">
            <summary>
            Color of blinking in partially filled state (Buy).
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartActiveOrdersElement.SellPendingColor">
            <summary>
            Color of Sell order in non-active state.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartActiveOrdersElement.SellColor">
            <summary>
            Color of Sell order in active state.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartActiveOrdersElement.SellBlinkColor">
            <summary>
            Color of blinking in partially filled state (Sell).
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartActiveOrdersElement.CancelButtonColor">
            <summary>
            Cancel order button color.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartActiveOrdersElement.CancelButtonBackground">
            <summary>
            Cancel order button background color.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartActiveOrdersElement.ForegroundColor">
            <summary>
            Text color.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartActiveOrdersElement.IsAnimationEnabled">
            <summary>
            Show chart element.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.IChartAnnotation">
            <summary>
            Annotation.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAnnotation.Type">
            <summary>
            Annotation type.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.IChartArea">
            <summary>
            Chart area.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartArea.Elements">
            <summary>
            Area elements (<see cref="T:StockSharp.Charting.IChartIndicatorElement"/>, <see cref="T:StockSharp.Charting.IChartCandleElement"/>, etc.).
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartArea.XAxises">
            <summary>
            The list of horizontal axes.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartArea.YAxises">
            <summary>
            The list of vertical axes.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartArea.XAxisType">
            <summary>
            Type of X axis for this chart.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartArea.Title">
            <summary>
            Chart area name.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartArea.Height">
            <summary>
            The height of the area.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartArea.Chart">
            <summary>
            Chart.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.IChartAxis">
            <summary>
            The chart axis.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.ChartArea">
            <summary>
            Chart area.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.IsDefault">
            <summary>
            Whether this axis can be removed from chart area.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.Id">
            <summary>
            Unique ID.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.IsVisible">
            <summary>
            Axis visibility.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.Title">
            <summary>
            Header.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.Group">
            <summary>
            Group.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.SwitchAxisLocation">
            <summary>
            Whether to use alternative axis alignment.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.AxisType">
            <summary>
            Axis type.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.AutoRange">
            <summary>
            Auto range.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.FlipCoordinates">
            <summary>
            Flip coordinates.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.DrawMajorTicks">
            <summary>
            Show main grid lines on the axis.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.DrawMajorGridLines">
            <summary>
            Show main grid lines.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.DrawMinorTicks">
            <summary>
            Show extra grid lines on the axis.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.DrawMinorGridLines">
            <summary>
            Show extra grid lines.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.DrawLabels">
            <summary>
            Show labels on the axis.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.TextFormatting">
            <summary>
            Labels format.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.SubDayTextFormatting">
            <summary>
            The format of X-axis labels within the day.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartAxis.TimeZone">
            <summary>
            Time zone for this axis.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.IChartBandElement">
            <summary>
            The chart element representing a band.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartBandElement.Style">
            <summary>
            The band drawing style. The default is <see cref="F:StockSharp.Charting.ChartIndicatorDrawStyles.Band"/>. Can also be <see cref="F:StockSharp.Charting.ChartIndicatorDrawStyles.BandOneValue"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartBandElement.Line1">
            <summary>
            <see cref="P:StockSharp.Charting.IChartBandElement.Line1"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartBandElement.Line2">
            <summary>
            <see cref="P:StockSharp.Charting.IChartBandElement.Line2"/>.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.IChartCandleElement">
            <summary>
            The chart element representing a candle.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.DrawStyle">
            <summary>
            Style of candles rendering.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.DownFillColor">
            <summary>
            Body color of decreasing candle.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.UpFillColor">
            <summary>
            Body color of increasing candle.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.DownBorderColor">
            <summary>
            Border color of decreasing candle.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.UpBorderColor">
            <summary>
            Border color of increasing candle.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.StrokeThickness">
            <summary>
            Line width (bar or border), with which candle will be drawn on chart.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.AntiAliasing">
            <summary>
            Candles rendering smoothing (enabled by default).
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.LineColor">
            <summary>
            Line color for <see cref="P:StockSharp.Charting.IChartCandleElement.DrawStyle"/> Line*.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.AreaColor">
            <summary>
            Area color for <see cref="P:StockSharp.Charting.IChartCandleElement.DrawStyle"/> set as <see cref="F:StockSharp.Charting.ChartCandleDrawStyles.Area"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.ShowAxisMarker">
            <summary>
            Show Y-axis market.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.Colorer">
            <summary>
            Custom elements colorer.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.Timeframe2Multiplier">
            <summary>
            Timeframe #2 multiplier.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.Timeframe3Multiplier">
            <summary>
            Timeframe #3 multiplier.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.FontColor">
            <summary>
            Font color.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.Timeframe2Color">
            <summary>
            Timeframe #2 color.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.Timeframe2FrameColor">
            <summary>
            Timeframe #2 frame color.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.Timeframe3Color">
            <summary>
            Timeframe #3 color.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.MaxVolumeColor">
            <summary>
            Max volume color.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.ClusterLineColor">
            <summary>
            Cluster profile line color.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.ClusterSeparatorLineColor">
            <summary>
            Cluster profile separator line color.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.ClusterTextColor">
            <summary>
            Cluster text color.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.ClusterColor">
            <summary>
            Cluster color.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.ClusterMaxColor">
            <summary>
            Cluster max color.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.ShowHorizontalVolumes">
            <summary>
            Show horizontal volume.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.LocalHorizontalVolumes">
            <summary>
            Local horizontal volume.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.HorizontalVolumeWidthFraction">
            <summary>
            Horizontal volume width fraction.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.HorizontalVolumeColor">
            <summary>
            Horizontal volume color.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartCandleElement.HorizontalVolumeFontColor">
            <summary>
            Horizontal volume font color.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.IChartDrawData">
            <summary>
            Chart drawing data.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem">
            <summary>
            Chart drawing data item.
            </summary>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.IChartDrawDataItem.Add(StockSharp.Charting.IChartCandleElement,System.Nullable{System.Drawing.Color})">
            <summary>
            Put candle color data.
            </summary>
            <param name="element">The chart element representing a candle.</param>
            <param name="color">Candle draw color.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.IChartDrawDataItem.Add(StockSharp.Charting.IChartCandleElement,StockSharp.Algo.Candles.Candle)">
            <summary>
            Put the candle data.
            </summary>
            <param name="element">The chart element representing a candle.</param>
            <param name="candle">The candle data.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.IChartDrawDataItem.Add(StockSharp.Charting.IChartCandleElement,StockSharp.Algo.Candles.Candle,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Put the candle data.
            </summary>
            <param name="element">The chart element representing a candle.</param>
            <param name="candle">Candle.</param>
            <param name="openPrice">Opening price.</param>
            <param name="highPrice">Highest price.</param>
            <param name="lowPrice">Lowest price.</param>
            <param name="closePrice">Closing price.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.IChartDrawDataItem.Add(StockSharp.Charting.IChartCandleElement,StockSharp.Algo.Candles.Candle,System.Decimal,System.Decimal,System.Decimal,System.Decimal,StockSharp.Messages.CandlePriceLevel[],System.Nullable{System.Decimal})">
            <summary>
            Put the candle data.
            </summary>
            <param name="element">The chart element representing a candle.</param>
            <param name="candle">Candle.</param>
            <param name="openPrice">Opening price.</param>
            <param name="highPrice">Highest price.</param>
            <param name="lowPrice">Lowest price.</param>
            <param name="closePrice">Closing price.</param>
            <param name="priceLevels">Price levels.</param>
            <param name="priceStep">Minimum price step.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.IChartDrawDataItem.Add(StockSharp.Charting.IChartCandleElement,System.Object,System.Decimal,System.Decimal,System.Decimal,System.Decimal,StockSharp.Messages.CandlePriceLevel[],System.Nullable{System.Decimal})">
            <summary>
            Put the candle data.
            </summary>
            <param name="element">The chart element representing a candle.</param>
            <param name="candleArg">Candle arg.</param>
            <param name="openPrice">Opening price.</param>
            <param name="highPrice">Highest price.</param>
            <param name="lowPrice">Lowest price.</param>
            <param name="closePrice">Closing price.</param>
            <param name="priceLevels">Price levels.</param>
            <param name="priceStep">Minimum price step.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.IChartDrawDataItem.Add(StockSharp.Charting.IChartIndicatorElement,StockSharp.Algo.Indicators.IIndicatorValue)">
            <summary>
            Put the indicator data.
            </summary>
            <param name="element">The chart element representing the indicator.</param>
            <param name="value">The indicator value.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.IChartDrawDataItem.Add(StockSharp.Charting.IChartOrderElement,StockSharp.BusinessEntities.Order,System.String)">
            <summary>
            Put the order data.
            </summary>
            <param name="element">The chart element representing orders.</param>
            <param name="order">The order value.</param>
            <param name="errorMessage">Error registering/cancelling order.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.IChartDrawDataItem.Add(StockSharp.Charting.IChartOrderElement,System.Int64,System.String,StockSharp.Messages.Sides,System.Decimal,System.Decimal,System.String)">
            <summary>
            Put the trade data.
            </summary>
            <param name="element">The chart element representing orders.</param>
            <param name="orderId">Order ID.</param>
            <param name="orderStringId">Order ID (as string, if electronic board does not use numeric order ID representation).</param>
            <param name="side">Order side (buy or sell).</param>
            <param name="price">Order price.</param>
            <param name="volume">Number of contracts in the order.</param>
            <param name="errorMessage">Error registering/cancelling order.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.IChartDrawDataItem.Add(StockSharp.Charting.IChartTradeElement,StockSharp.BusinessEntities.MyTrade)">
            <summary>
            Put the order data.
            </summary>
            <param name="element">The chart element representing trades.</param>
            <param name="trade">The trade value.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.IChartDrawDataItem.Add(StockSharp.Charting.IChartTradeElement,System.Int64,System.String,StockSharp.Messages.Sides,System.Decimal,System.Decimal)">
            <summary>
            Put the trade data.
            </summary>
            <param name="element">The chart element representing trades.</param>
            <param name="tradeId">Trade ID.</param>
            <param name="tradeStringId">Trade ID (as string, if electronic board does not use numeric order ID representation).</param>
            <param name="side">Order side (buy or sell).</param>
            <param name="price">Trade price.</param>
            <param name="volume">Number of contracts in the trade.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.IChartDrawDataItem.Add(StockSharp.Charting.IChartLineElement,System.Double,System.Double)">
            <summary>
            Put the line data.
            </summary>
            <param name="element">The chart element representing a line.</param>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.IChartDrawDataItem.Add(StockSharp.Charting.IChartBandElement,System.Decimal)">
            <summary>
            Put the line data.
            </summary>
            <param name="element">The chart element representing a band.</param>
            <param name="value">The value.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.IChartDrawDataItem.Add(StockSharp.Charting.IChartBandElement,System.Double,System.Double)">
            <summary>
            Put the line data.
            </summary>
            <param name="element">The chart element representing a band.</param>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.IChartDrawDataItem.Add(StockSharp.Charting.IChartElement,System.Object)">
            <summary>
            Put the chart data.
            </summary>
            <param name="element">The chart element.</param>
            <param name="value">The chart value.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.Group(System.DateTimeOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/>.
            </summary>
            <param name="timeStamp">The time stamp of the new data generation.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.Group(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/>.
            </summary>
            <param name="xValue">Value of X coordinate for the data.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.Add(StockSharp.Charting.IChartAnnotation,StockSharp.Charting.IAnnotationData)">
            <summary>
            Put the annotation data.
            </summary>
            <param name="element">The chart element representing an annotation.</param>
            <param name="data">Annotation draw data.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData.IChartDrawDataItem"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartDrawData.Add(StockSharp.Charting.IChartActiveOrdersElement,StockSharp.BusinessEntities.Order,System.Nullable{System.Boolean},System.Boolean,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{StockSharp.Messages.OrderStates})">
            <summary>
            Put the active order data.
            </summary>
            <param name="element">The chart element representing active orders.</param>
            <param name="order">The order. Can be null to draw just error animation without data.</param>
            <param name="isFrozen">Do not allow user to edit the order from chart.</param>
            <param name="autoRemoveFromChart">Auto remove this order from chart when its state is final (<see cref="F:StockSharp.Messages.OrderStates.Done"/>, <see cref="F:StockSharp.Messages.OrderStates.Failed"/>).</param>
            <param name="isHidden">Whether an order operation has failed.</param>
            <param name="isError">Whether an order operation has failed.</param>
            <param name="price">Order price.</param>
            <param name="balance">Balance.</param>
            <param name="state">Use this state to draw the order.</param>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData"/> instance.</returns>
        </member>
        <member name="T:StockSharp.Charting.IChartElement">
            <summary>
            The interface that describes the chart element (indicator, candle, etc.).
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartElement.FullTitle">
            <summary>
            The full series title.
            If this property is undefined, auto-generated title will be used instead.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartElement.IsVisible">
            <summary>
            Whether this element is visible on chart.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartElement.IsLegend">
            <summary>
            Should this element be shown in the legend.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartElement.XAxisId">
            <summary>
            X-axis.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartElement.YAxisId">
            <summary>
            Y-axis.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartElement.Colorer">
            <summary>
            Custom elements colorer.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartElement.XAxis">
            <summary>
            X axis this element currently attached to.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartElement.YAxis">
            <summary>
            Y axis this element currently attached to.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartElement.Chart">
            <summary>
            The chart on which the element is drawn.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartElement.ChartArea">
            <summary>
            The chart area on which the element is drawn.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartElement.PersistantChartArea">
            <summary>
            The chart area on which the element is drawn.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.IChartExtensions">
            <summary>
            <see cref="T:StockSharp.Charting.IChart"/> extensions.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartExtensions.IndicatorProvider">
            <summary>
            <see cref="T:StockSharp.Charting.IIndicatorProvider"/>
            </summary>
        </member>
        <member name="M:StockSharp.Charting.IChartExtensions.ExcludeObsolete(System.Collections.Generic.IEnumerable{StockSharp.Algo.Indicators.IndicatorType})">
            <summary>
            Exclude obsolete indicators.
            </summary>
            <param name="types">All indicator types.</param>
            <returns>Filtered collection.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartExtensions.FillIndicators(StockSharp.Charting.IChart)">
            <summary>
            Fill <see cref="P:StockSharp.Charting.IChart.IndicatorTypes"/> using <see cref="T:StockSharp.Charting.IIndicatorProvider"/>.
            </summary>
            <param name="chart">Chart.</param>
        </member>
        <member name="M:StockSharp.Charting.IChartExtensions.IsIndicatorSupportedByChart(System.Type)">
            <summary>
            Check if indicator is supported by chart.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.IChartIndicatorElement">
            <summary>
            The chart element representing the indicator.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartIndicatorElement.IndicatorPainter">
            <summary>
            The indicator renderer.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartIndicatorElement.Color">
            <summary>Compatibility property for <see cref="P:StockSharp.Charting.IChartLineElement.Color"/>.</summary>
        </member>
        <member name="P:StockSharp.Charting.IChartIndicatorElement.AdditionalColor">
            <summary>Compatibility property for <see cref="P:StockSharp.Charting.IChartLineElement.AdditionalColor"/>.</summary>
        </member>
        <member name="P:StockSharp.Charting.IChartIndicatorElement.StrokeThickness">
            <summary>Compatibility property for <see cref="P:StockSharp.Charting.IChartLineElement.StrokeThickness"/>.</summary>
        </member>
        <member name="P:StockSharp.Charting.IChartIndicatorElement.AntiAliasing">
            <summary>Compatibility property for <see cref="P:StockSharp.Charting.IChartLineElement.AntiAliasing"/>.</summary>
        </member>
        <member name="P:StockSharp.Charting.IChartIndicatorElement.DrawStyle">
            <summary>Compatibility property for <see cref="P:StockSharp.Charting.IChartLineElement.Style"/>.</summary>
        </member>
        <member name="P:StockSharp.Charting.IChartIndicatorElement.ShowAxisMarker">
            <summary>Compatibility property for <see cref="P:StockSharp.Charting.IChartLineElement.ShowAxisMarker"/>.</summary>
        </member>
        <member name="T:StockSharp.Charting.IChartIndicatorPainter">
            <summary>
            The interface describing the indicator renderer on the chart (for example, lines, histograms, etc.).
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartIndicatorPainter.Element">
            <summary>
            The chart element representing the indicator.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartIndicatorPainter.InnerElements">
            <summary>
            Child elements.
            </summary>
        </member>
        <member name="M:StockSharp.Charting.IChartIndicatorPainter.Draw(StockSharp.Charting.IChartDrawData)">
            <summary>
            To process the new data.
            </summary>
            <param name="data">New data.</param>
            <returns><see langword="true"/> if the data was successfully drawn, otherwise, returns <see langword="false"/>.</returns>
        </member>
        <member name="M:StockSharp.Charting.IChartIndicatorPainter.Reset">
            <summary>
            To reset painter child elements.
            </summary>
        </member>
        <member name="M:StockSharp.Charting.IChartIndicatorPainter.OnAttached(StockSharp.Charting.IChartIndicatorElement)">
            <summary>
            Called when this painter is attached to chart indicator element.
            </summary>
        </member>
        <member name="M:StockSharp.Charting.IChartIndicatorPainter.OnDetached">
            <summary>
            Called when this painter is detached from chart indicator element.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.IChartLineElement">
            <summary>
            The chart element representing a line.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartLineElement.Color">
            <summary>
            Line color (bars, etc.), with which it will be drawn on chart.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartLineElement.AdditionalColor">
            <summary>
            Additional line color (bars, etc.), with which it will be drawn on the chart.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartLineElement.StrokeThickness">
            <summary>
            The thickness of the line (bar, etc.) with which it will be drawn on the chart. The default is 1.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartLineElement.AntiAliasing">
            <summary>
            The smoothing of the line drawing. The default is enabled.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartLineElement.Style">
            <summary>
            The line drawing style. The default is <see cref="F:StockSharp.Charting.ChartIndicatorDrawStyles.Line"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartLineElement.ShowAxisMarker">
            <summary>
            Show Y-axis market.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.IChartOrderElement">
            <summary>
            The chart element representing orders.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartOrderElement.ErrorColor">
            <summary>
            Fill color of transaction errors.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartOrderElement.Filter">
            <summary>
            Orders display filter.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.IChartPart`1">
            <summary>
            The interfaces that describes the part of the chart.
            </summary>
            <typeparam name="T">The chart element type.</typeparam>
        </member>
        <member name="P:StockSharp.Charting.IChartPart`1.Id">
            <summary>
            Unique ID.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.IChartTradeElement">
            <summary>
            The chart element representing trades.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.IChartTransactionElement`1">
            <summary>
            The interface that describes the Orders Or Trades chart element.
            </summary>
            <typeparam name="T">The element type.</typeparam>
        </member>
        <member name="P:StockSharp.Charting.IChartTransactionElement`1.BuyColor">
            <summary>
            Color of graphics element on chart, indicating buy.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartTransactionElement`1.BuyStrokeColor">
            <summary>
            Border color of graphics element on chart, indicating buy.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartTransactionElement`1.SellColor">
            <summary>
            Color of graphics element on chart, indicating sell.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartTransactionElement`1.SellStrokeColor">
            <summary>
            Border color of graphics element on chart, indicating sell.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartTransactionElement`1.UseAltIcon">
            <summary>
            Use alternative icons.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IChartTransactionElement`1.DrawSize">
            <summary>
            Draw size.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.IIndicatorProvider">
            <summary>
            Provider <see cref="T:StockSharp.Algo.Indicators.IndicatorType"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Charting.IIndicatorProvider.GetIndicatorTypes">
            <summary>
            Get all indicator types.
            </summary>
            <returns>All indicator types.</returns>
        </member>
        <member name="T:StockSharp.Charting.DummyIndicatorProvider">
            <summary>
            <see cref="T:StockSharp.Charting.IIndicatorProvider"/>
            </summary>
        </member>
        <member name="M:StockSharp.Charting.DummyIndicatorProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Charting.DummyIndicatorProvider"/>.
            </summary>
        </member>
        <member name="T:StockSharp.Charting.IThemeableChart">
            <summary>
            Base interface for all chart components.
            </summary>
        </member>
        <member name="P:StockSharp.Charting.IThemeableChart.ChartTheme">
            <summary>
            The name of the graphic theme.
            </summary>
        </member>
        <member name="M:StockSharp.Charting.IThemeableChart.CreateData">
            <summary>
            Create <see cref="T:StockSharp.Charting.IChartDrawData"/> instance.
            </summary>
            <returns><see cref="T:StockSharp.Charting.IChartDrawData"/> instance.</returns>
        </member>
        <member name="M:StockSharp.Charting.IThemeableChart.Draw(StockSharp.Charting.IChartDrawData)">
            <summary>
            To process the new data.
            </summary>
            <param name="data">New data.</param>
        </member>
        <member name="T:StockSharp.Charting.LabelPlacement">
            <summary>
            Enumeration constants to define label placement.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.LabelPlacement.Right">
            <summary>Places on the right.</summary>
        </member>
        <member name="F:StockSharp.Charting.LabelPlacement.TopRight">
            <summary>Places at the top right.</summary>
        </member>
        <member name="F:StockSharp.Charting.LabelPlacement.BottomRight">
            <summary>Places at the bottom right.</summary>
        </member>
        <member name="F:StockSharp.Charting.LabelPlacement.Bottom">
            <summary>Places at the bottom.</summary>
        </member>
        <member name="F:StockSharp.Charting.LabelPlacement.Left">
            <summary>Places on the left.</summary>
        </member>
        <member name="F:StockSharp.Charting.LabelPlacement.TopLeft">
            <summary>Places on the top left.</summary>
        </member>
        <member name="F:StockSharp.Charting.LabelPlacement.BottomLeft">
            <summary>Places on the bottom left.</summary>
        </member>
        <member name="F:StockSharp.Charting.LabelPlacement.Top">
            <summary>Places at the top.</summary>
        </member>
        <member name="F:StockSharp.Charting.LabelPlacement.Axis">
            <summary>Places on the axis.</summary>
        </member>
        <member name="F:StockSharp.Charting.LabelPlacement.Center">
            <summary>Places at the center.</summary>
        </member>
        <member name="F:StockSharp.Charting.LabelPlacement.Auto">
            <summary>Automatic Placement (Default).</summary>
        </member>
        <member name="T:StockSharp.Charting.LineChartStyles">
            <summary>
            Equity curve chart drawing styles.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.LineChartStyles.Area">
            <summary>
            Chart drawing in the form of a fill area.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.LineChartStyles.Line">
            <summary>
            Chart drawing in the form of a line.
            </summary>
        </member>
        <member name="F:StockSharp.Charting.LineChartStyles.DashedLine">
            <summary>
            Chart drawing in the form of a dashed line.
            </summary>
        </member>
        <member name="T:StockSharp.Xaml.Charting.IChartVolatilitySmileElement">
            <summary>
            The chart element representing a volatility smile.
            </summary>
        </member>
        <member name="P:StockSharp.Xaml.Charting.IChartVolatilitySmileElement.Values">
            <summary>
            Points that displays source volatility values.
            </summary>
        </member>
        <member name="P:StockSharp.Xaml.Charting.IChartVolatilitySmileElement.Smile">
            <summary>
            Line that displays approximated volatility smile.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.IsExternalInit">
            <summary>
            Reserved to be used by the compiler for tracking metadata.
            This class should not be used by developers in source code.
            </summary>
        </member>
    </members>
</doc>
